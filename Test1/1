首部：
		s8 magic[12];	// "PackFile    "
		u32 entries;	//资源文件数（每项长度32字节）		
	索引段：
		s8 name[16];	// 资源文件名
		u32 offset;	// 资源文件数据偏移（从索引段算起）
		u32 length;	// 资源文件数据长度
		u32 reserved[2];
	数据：明文资源文件或经过dsc格式封装的资源文件
		紧接在索引段之后。

dsc
	首部：
		s8 magic[16];	// "DSC FORMAT 1.00"
		u32 key;	// 解密512字节depth用key
		u32 uncomprlen;	// 解压后的数据长度
		u32 dec_counts;	// 解压循环的次数
		u32 reserved;
	数据：	lz压缩＋哈夫曼编码
		u8 depth[512];	// 加密过的512字节哈夫曼树叶节点深度信息（即编码位长度，用于重建哈夫曼树）；
				// 其中code小于256的叶节点是lz压缩时直接输出的字节数据；
				// code大于等于256的叶节点是lz压缩时用于寻址window的copy_bytes长度（实际长度还要＋2）。
		接下来是哈夫曼编码的位数据。如果叶节点的code小于256，则输出数据就是code本身；如果code大于等于256，则位数据中的12位用于window索引，code - 256表示copy_bytes长度（实际长度还要＋2）。（典型的lz压缩算法）
